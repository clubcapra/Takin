<robot name="capra6">
    <link name="base_link">
        <visual>
            <geometry>
                <mesh filename="package://capra_simulation/models/vincent/vincent.dae"/>
            </geometry>
            <origin rpy="1.57 0 1.57" xyz="0 0 0.2" />
        </visual>
        <inertial>
            <mass value="100" />
            <inertia ixx="10.0" ixy="0.0" ixz="0.0" iyy="10.0" iyz="0.0" izz="10.0" />
        </inertial>
        <collision>
            <geometry>
                <mesh filename="package://capra_simulation/models/vincent/vincent.dae"/>
            </geometry>
            <origin rpy="1.57 0 1.57" xyz="0 0 0.2" />
        </collision>
    </link>

    <joint name="joint4" type="fixed">
        <parent link="base_link" />
        <child link="pole" />
        <origin xyz="0 0 0" rpy="0 0 0" />
    </joint>


    <link name="pole">
        <inertial>
            <mass value="1" />
            <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
        </inertial>
        <collision>
            <geometry>
                <box size="0.05 0.05 1.2" />
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0.6" />
        </collision>
    </link>

    <joint name="joint1" type="fixed">
        <parent link="base_link" />
        <child link="laser" />
        <origin xyz="0.36 0 0.44" rpy="0 0 0" />
    </joint>


    <link name="laser">
        <inertial>
            <mass value="1" />
            <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
        </inertial>
        <collision>
            <geometry>
                <sphere radius="0.1" />
            </geometry>
        </collision>
    </link>

    <joint name="joint5" type="fixed">
        <parent link="base_link" />
        <child link="imu_robot" />
        <!-- IMU orientation
         - rotation autour de x de PI (180 degres) pour inverser le sens de rotation
         - rotation autour de z de PI/2 (90 degres) pour avoir l'est comme reference
         - autre rotation atour de Z pour la declinaison magnetique (0.25 rad) (pi /2 + 0.25 = 1.82079) -->
        <origin xyz="0 0 0.5" rpy="3.141593 0 1.22" />
    </joint>

    <link name="imu_robot">
        <inertial>
            <mass value="1" />
            <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
        </inertial>
        <collision>
            <geometry>
                <sphere radius="0.1" />
            </geometry>
        </collision>
    </link>

    <joint name="joint2" type="fixed">
        <parent link="base_link" />
        <child link="camera" />
        <origin xyz="0.28 0 1.28" rpy="0 0.92 0" />
    </joint>

    <link name='camera'>
        <inertial>
            <mass value="1" />
            <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
        </inertial>
        <collision>
            <geometry>
                <sphere radius="0.1" />
            </geometry>
        </collision>
    </link>

    <gazebo reference="base_link">
        <gravity>false</gravity>
    </gazebo>

    <gazebo reference="pole">
        <gravity>false</gravity>
    </gazebo>

    <gazebo reference="base_link">
        <gravity>false</gravity>
        <sensor type="imu" name="imu">
            <imu>

            </imu>

        </sensor>
            <plugin name="imu_plugin" plugin="libgazebo_ros_imu.so">
                <alwaysOn>true</alwaysOn>
                <bodyName>imu_robot</bodyName>
                <topicName>imu_data</topicName>
                <serviceName>imu_service</serviceName>
            </plugin>
    </gazebo>

    <gazebo reference="camera">
        <gravity>false</gravity>
        <sensor name="camera" type="camera" update_rate="20.0" >
            <camera>
                <horizontal_fov>1.6</horizontal_fov>
                <image>
                    <width>1292</width>
                    <height>734</height>
                </image>
                <clip>
                    <near>0.1</near>
                    <far>50</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="camera_plugin" filename="libgazebo_ros_camera.so">
                <cameraName></cameraName>
                <frameName>camera</frameName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            </plugin>
            <always_on>1</always_on>
            <update_rate>40</update_rate>
            <visualize>true</visualize>
        </sensor>
    </gazebo>

    <gazebo reference="laser">
        <gravity>false</gravity>
        <material>Gazebo/Red</material>

        <sensor type="ray" name="sensor">

          <!-- Position the ray sensor based on the specification. Also rotate
               it by 90 degrees around the X-axis so that the <horizontal> rays
               become vertical -->
          <pose>0 0 0.5 0 0 0</pose>

          <!-- Enable visualization to see the rays in the GUI -->
          <visualize>true</visualize>

          <!-- Set the update rate of the sensor -->
          <update_rate>30</update_rate>
          <ray>

            <!-- The scan element contains the horizontal and vertical beams.
                 We are leaving out the vertical beams for this tutorial. -->
            <scan>

              <!-- The horizontal beams -->
              <horizontal>
                <!-- The velodyne has 32 beams(samples) -->
                <samples>540</samples>

                <resolution>1</resolution>

                <!-- Minimum angle in radians -->
                <min_angle>-2.3562</min_angle>

                <!-- Maximum angle in radians -->
                <max_angle>2.3562</max_angle>   
              </horizontal>
            </scan>

            <!-- Range defines characteristics of an individual beam -->
            <range>

              <!-- Minimum distance of the beam -->
              <min>0.2</min>

              <!-- Maximum distance of the beam -->
              <max>4</max>

              <!-- Linear resolution of the beam -->
              <resolution>0.1</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.01</stddev>
            </noise>
          </ray>
        </sensor>
    </gazebo>

    <gazebo>
        <plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
            <commandTopic>/cmd_vel</commandTopic>
            <odometryTopic>/odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <odometryRate>20.0</odometryRate>
            <robotBaseFrame>base_footprint</robotBaseFrame>
        </plugin>

    </gazebo>


</robot>
